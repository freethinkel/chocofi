/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

#define L_DEFAULT 0
#define L_CODE 1
#define L_FUNC 2

&lt {
    tapping-term-ms = <200>;
    flavor = "hold-preferred";
};

/ {
        behaviors {
                cm: controls_mods {
                        compatible = "zmk,behavior-hold-tap";
                        #binding-cells = <2>;
                        tapping-term-ms = <200>;
                        quick-tap-ms = <0>;
                        flavor = "tap-preferred";
                        bindings = <&kp>, <&kp>;
                        retro-tap;
                };
        };
        keymap {
                compatible = "zmk,keymap";

                default_layer {
// -----------------------------------------------------------------------------------------
// | _ |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | _ |
// | _ |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  | _ |
// | _ |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | _ |
//                 | GUI | LWR | SPC |   | ENT | RSE  | ALT |
                        bindings = <
   &none &cm TAB Q    &kp W    &kp E     &kp R     &kp T                   &kp Y            &kp U      &kp I      &kp O      &kp P     &none
   &none &cm LCTRL A  &kp S    &kp D     &kp F     &kp G                   &kp H            &kp J      &kp K      &kp L      &kp SEMI  &none
   &none &cm LSHFT Z  &kp X    &kp C     &kp V     &kp B                   &kp N            &kp M      &kp COMMA  &kp DOT    &kp FSLH  &none
                               &kp LALT  &kp LGUI  &lt L_FUNC SPACE        &lt L_CODE ENTER &kp BSPC   &kp RSHFT
                        >;
                };
                code_layer {
// -----------------------------------------------------------------------------------------
// | _ |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | _ |
// | _ | BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     | _ |
// | _ |     |     |     |     |     |   |     |     |     |     |     | _ |
//                 | GUI |     | SPC |   | ENT |     | ALT |
                        bindings = <
   &none    &kp TAB      &kp C_BRI_DN  &kp C_BRI_UP  &trans   &trans            &kp C_PREV   &kp C_PLAY_PAUSE  &kp C_NEXT  &kp C_VOL_DN  &kp C_VOL_UP  &none
   &none    &kp N1       &kp N2        &kp N3        &kp N4   &kp N5            &kp LEFT     &kp DOWN          &kp UP      &kp RIGHT     &kp SQT       &none
   &none    &kp N6       &kp N7        &kp N8        &kp N9   &kp N0            &trans       &trans            &trans      &trans        &kp GRAVE     &none
                                       &trans        &trans   &trans            &trans       &trans            &trans
                        >;
                };

                func_layer {
// -----------------------------------------------------------------------------------------
// | _ |  !  |  @  |  #  |  $  |  %  |              |  ^  |  &  |  *  |  (  |  )  | _ |
// | _ |     |     |     |     |     |              |  -  |  =  |  [  |  ]  |  \  | _ |
// | _ |     |     |     |     |     |              |  _  |  +  |  {  |  }  | "|" | _ |
//                 | GUI |     | SPC |              | ENT |     | ALT |
                        bindings = <
   &none &lt TAB ESC    &trans  &trans   &trans  &trans       &trans     &trans     &trans  &trans  &trans  &none
   &none &kp LCTRL      &trans  &trans   &trans  &trans       &kp LBKT   &kp RBKT   &trans  &trans  &trans  &none
   &none &kp LSHFT      &trans  &trans   &trans  &trans       &kp MINUS  &kp EQUAL  &kp BSLH  &trans  &trans  &none
                                &trans   &trans  &trans       &trans     &trans     &trans
                        >;
                };
        };
};
